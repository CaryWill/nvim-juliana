--# selene: allow(unscoped_variables)
--# selene: allow(undefined_variable)
-- Generated with rktjmp/shipwright.nvim
local M = {}

local highlights = {
    -- content here will not be touched
    -- PATCH_OPEN
    Normal = { fg = '#CBD3E2', bg = '#293038' },
    Character = { fg = '#93CF8C' },
    String = { link = 'Character' },
    ColorColumn = { fg = '#CBD3E2', bg = '#293038' },
    Comment = { italic = true, fg = '#728292' },
    Conceal = { fg = '#5A6B8C' },
    Conditional = { fg = '#CF8CCF' },
    Constant = { fg = '#CF8CCF' },
    Boolean = { link = 'Constant' },
    CursorColumn = { link = 'CursorLine' },
    Delimiter = { fg = '#5E99D4' },
    TSPunctDelimiter = { link = 'Delimiter' },
    DiagnosticError = { fg = '#EF5D64' },
    DiagnosticHint = { fg = '#FBC760' },
    DiagnosticInfo = { fg = '#54C0C0' },
    DiagnosticUnderlineError = { sp = '#EF5D64', underdot = true },
    DiagnosticUnderlineHint = { sp = '#D8DEE9', underdot = true },
    DiagnosticUnderlineInfo = { sp = '#54C0C0', underdot = true },
    DiagnosticUnderlineWarn = { sp = '#FAAE57', underdot = true },
    DiagnosticWarn = { fg = '#FAAE57' },
    DiffAdd = { fg = '#54C084' },
    DiffChange = { fg = '#F79322' },
    DiffDelete = { fg = '#EF5D64' },
    Directory = { underdot = true },
    EndOfBuffer = { fg = '#293038' },
    Error = { fg = '#FA7A57' },
    ErrorMsg = { fg = '#EF5D64' },
    WarningMsg = { link = 'ErrorMsg' },
    Exception = { fg = '#CF8CCF' },
    FoldColumn = { fg = '#CBD3E2', bg = '#293038' },
    Folded = { sp = '#647382', underdash = true },
    Function = { fg = '#5E99D4' },
    TSMethod = { link = 'Function' },
    Identifier = { fg = '#CBD3E2', bg = '#293038' },
    Include = { fg = '#7999B9' },
    PreCondit = { link = 'Include' },
    Keyword = { fg = '#CF8CCF' },
    Label = { fg = '#CF8CCF' },
    CursorLineNr = { link = 'LineNr' },
    LineNrAbove = { fg = '#A6ACB9' },
    LineNrBelow = { fg = '#A6ACB9' },
    Macro = { fg = '#8DADE7' },
    Define = { link = 'Macro' },
    MatchParen = { bg = '#3B454F' },
    ModeMsg = { fg = '#DEE1E8' },
    MoreMsg = { bold = true, fg = '#DEE1E8' },
    Question = { link = 'MoreMsg' },
    NonText = { fg = '#5A6B8C' },
    NormalFloat = { bg = '#252B32' },
    Pmenu = { link = 'NormalFloat' },
    Number = { fg = '#FAAE57' },
    Float = { link = 'Number' },
    Operator = { fg = '#FA7A57' },
    TSOperator = { link = 'Operator' },
    WildMenu = { link = 'Pmenu' },
    PmenuSbar = { fg = '#CBD3E2', bg = '#293038' },
    PmenuSel = { bg = '#252B32', bold = true },
    PmenuThumb = { bg = '#58657E' },
    PreProc = { fg = '#A7B4CD' },
    Repeat = { fg = '#CF8CCF' },
    Search = { fg = '#FFFFFF', bg = '#3B454F', bold = true },
    IncSearch = { link = 'Search' },
    Sneak = { link = 'Search' },
    SneakLabel = { link = 'Search' },
    SignColumn = { fg = '#CBD3E2', bg = '#293038' },
    Special = { fg = '#54C0C0' },
    SpecialChar = { fg = '#54C084' },
    SpecialComment = { underline = true, fg = '#728292' },
    SpecialKey = { fg = '#40D4D4' },
    SpellBad = { sp = '#EF5D64', undercurl = true },
    SpellCap = { sp = '#FAAE57', undercurl = true },
    SpellLocal = { sp = '#40D4D4', undercurl = true },
    SpellRare = { sp = '#CF8CCF', undercurl = true },
    Statement = { fg = '#CF8CCF' },
    StatusLine = { fg = '#CBD3E2', bg = '#3B454F' },
    StatusLineNC = { fg = '#CBD3E2', bg = '#293038' },
    StorageClass = { fg = '#EF5D64' },
    Structure = { fg = '#CF8CCF' },
    Typedef = { link = 'Structure' },
    TSConstBuiltin = { italic = true, fg = '#EF5D64' },
    TSConstMacro = { italic = true, fg = '#CF8CCF' },
    TSConstant = { fg = '#CF8CCF' },
    TSDanger = { bold = true, fg = '#EF5D64' },
    TSEmphasis = { italic = true },
    TSError = { fg = '#CBD3E2' },
    TSField = { fg = '#CF8CCF' },
    TSFuncMacro = { italic = true, fg = '#5E99D4' },
    TSFunction = { fg = '#5E99D4' },
    TSInclude = { fg = '#CF8CCF' },
    TSKeyword = { italic = true, fg = '#CF8CCF' },
    TSKeywordFunction = { italic = true, fg = '#CF8CCF' },
    TSKeywordOperator = { fg = '#CF8CCF' },
    TSKeywordReturn = { fg = '#CF8CCF' },
    TSLabel = { fg = '#84C2BB' },
    tomlTSProperty = { link = 'TSLabel' },
    yamlTSField = { link = 'TSLabel' },
    TSNote = { bold = true, fg = '#93CF8C' },
    TSParameter = { fg = '#FAAE57' },
    TSPunctBracket = { fg = '#CBD3E2' },
    TSPunctSpecial = { fg = '#5EBBD4' },
    TSStringEscape = { fg = '#8C9FCF' },
    TSStringRegex = { fg = '#8CC0CF' },
    TSStrong = { bold = true },
    TSSymbol = { fg = '#7EBFC4' },
    TSText = { fg = '#CBD3E2' },
    TSTextReference = { fg = '#CBD3E2' },
    TSTitle = { bold = true, fg = '#CBD3E2' },
    TSType = { italic = true, fg = '#CF8CCF' },
    TSTypeBuiltin = { italic = true, fg = '#5E99D4' },
    TSURI = { underdot = true, fg = '#54C0C0' },
    TSUnderline = { underline = true },
    TSVariable = { fg = '#CBD3E2' },
    TSNamespace = { link = 'TSVariable' },
    TSProperty = { link = 'TSVariable' },
    TSVariableBuiltin = { italic = true, fg = '#EF5D64' },
    TSWarning = { bold = true, fg = '#FAAE57' },
    TabLine = { fg = '#CBD3E2', bg = '#293038' },
    TabLineFill = { fg = '#CBD3E2', bg = '#293038' },
    TabLineSel = { fg = '#CBD3E2', bg = '#293038' },
    Tag = { fg = '#EF5D64' },
    Title = { fg = '#CF8CCF' },
    Todo = { bold = true, fg = '#5E99D4' },
    Type = { italic = true, fg = '#CF8CCF' },
    Underlined = { underdot = true },
    VertSplit = { fg = '#4E5A65' },
    Visual = { bg = '#3B454F' },
    CursorLine = { link = 'Visual' },
    LineNr = { link = 'Visual' },
    Substitute = { link = 'Visual' },
    Whitespace = { fg = '#5C75A3' },
    Winseparator = { fg = '#4E5A65' },
    gitCommitSelectedFile = { italic = true },
    gitCommitSummary = { bold = true },
    gitCommitTrailerToken = { italic = true, fg = '#CF8CCF' },
    luaTSField = { fg = '#95B2D6' },
    markdownTSPunctSpecial = { bold = true, fg = '#EF7A5D' },
    typescriptTSKeyword = { fg = '#EF5D64' },
    -- PATCH_CLOSE
    -- content here will not be touched
}

local function set_hl(colors)
    for group, attrs in pairs(colors) do
        vim.api.nvim_set_hl(0, group, attrs)
    end
end

function M.load()
    if vim.g.colors_name then
        vim.cmd('hi clear')
    end
    vim.cmd('highlight clear')
    vim.cmd('set t_Co=256')
    vim.cmd("let g:colors_name='sublime-mariana'")

    set_hl(highlights)
end

return M
